name: SDK

on:
  push:
    branches:
      - main
  pull_request:

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.41.1
          working-directory: sdk
          skip-go-installation: true

  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1
    - name: Build SDK
      working-directory: sdk
      run: go build ./...
    - name: Build SDK Tests
      working-directory: sdk
      run: go test -exec=echo ./...

  unit-tests:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1
    - name: Run SDK Unit Tests
      working-directory: sdk
      run: go test -v ./...

  integration-tests:
    runs-on: ubuntu-latest
    steps:
    - name: "Stellar Quickstart w/ CAP-21: Build"
      run: docker build -t stellar/quickstart:cap21 https://github.com/leighmcculloch/stellar--docker-stellar-core-horizon.git#cap21
    - name: "Stellar Quickstart w/ CAP-21: Run"
      run: docker run -d -p 8000:8000 --name stellar stellar/quickstart:cap21 --standalone --enable-core-artificially-accelerate-time-for-testing
    - name: "Stellar Quickstart w/ CAP-21: Wait for Ready"
      run: while ! [ "$(curl -s --fail localhost:8000 | jq '.history_latest_ledger')" -gt 0 ]; do echo waiting; sleep 1; done
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1
    - name: Run SDK Integration Tests
      working-directory: sdk
      run: for p in ./**/integrationtests; do go test -v $p; done
      env:
        INTEGRATION_TESTS: 1
